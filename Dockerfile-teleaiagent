FROM python:3.11-slim-bookworm

# Install dependencies & Rust
# RUN apt-get update && apt-get install -y \
#     build-essential \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the requirements file first to leverage Docker cache
COPY teleaiagent/requirements.txt .

# Install PyTorch with architecture detection
# Intel x86_64: Use CPU-specific builds from PyTorch wheel index  
# ARM64: Use default PyPI builds (ARM64 compatible)
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "x86_64" ]; then \
        echo "Installing PyTorch for Intel x86_64 (CPU optimized)"; \
        pip3 install --no-cache-dir torch==2.4.0+cpu torchvision==0.19.0+cpu torchaudio==2.4.0+cpu --index-url https://download.pytorch.org/whl/cpu; \
    else \
        echo "Installing PyTorch for ARM64 from PyPI"; \
        pip3 install --no-cache-dir torch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0; \
    fi

# Install remaining Python dependencies
RUN pip3 install --no-cache-dir sentence-transformers==3.0.1 && \
    pip3 install --no-cache-dir -r requirements.txt

# Remove build dependencies to reduce image size
RUN apt-get update && apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*

# Copy the entire project into the container
COPY teleaiagent/ .

# Set environment variables for Docker runtime
ENV PYTHONUNBUFFERED=1
ENV RUNNING_IN_DOCKER=true

# Optional: Debugging tools (disable in production)
RUN ls -lsa
RUN pwd

# Default command to run the application
CMD ["python3", "main.py"]
